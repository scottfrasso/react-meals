{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/MealItem/MealItem.module.css","components/Meals/AvailableMeals.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css","components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","store/types.tsx","components/Cart/CartIcon.tsx","store/cart-context.tsx","components/Layout/HeaderCartButton.tsx","assets/meals.jpeg","components/Layout/Header.tsx","components/Meals/MealsSummary.tsx","components/UI/Card.tsx","components/UI/Input.tsx","components/Meals/MealItem/MealItemForm.tsx","components/Meals/MealItem/MealItem.tsx","components/Meals/AvailableMeals.tsx","components/Meals/Meals.tsx","components/UI/Modal.tsx","components/Cart/CartItem.tsx","components/Cart/Checkout.tsx","components/Cart/Cart.tsx","store/CartProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","CartActionType","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","HeaderCartButton","props","useState","buttonIsHighlited","setButtonIsHighlited","items","useContext","numberOfCartItems","reduce","currentNumber","item","amount","buttonClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","onShowCart","Fragment","header","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","id","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","name","description","price","cartContext","fixedPrice","toFixed","meal","addItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","fetch","response","ok","Error","json","key","responseData","loadedMeals","push","catch","error","message","MealsLoading","MealsError","mealsList","map","Meals","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","onRemove","onAdd","actions","isEmpty","Checkout","onConfirm","onCancel","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","hasItems","cartItemRemoveHandler","removeItem","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","bind","modalActions","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducer","state","action","ADD","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","REMOVE","existingItem","filter","CLEAR","CartProvider","useReducer","cartState","dispatchCartAction","Provider","App","cartIsShown","setCartIsShown","createRoot","render"],"mappings":"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","file":"static/js/main.af12140a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26gr1\",\"control\":\"Checkout_control__2qGfb\",\"actions\":\"Checkout_actions__2X_6_\",\"submit\":\"Checkout_submit__2BFZZ\",\"invalid\":\"Checkout_invalid__2gAN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"price\":\"CartItem_price__2Nl0j\",\"amount\":\"CartItem_amount__jUKEC\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2uJ70\",\"description\":\"MealItem_description__2YINS\",\"price\":\"MealItem_price__3sNYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\",\"MealsLoading\":\"AvailableMeals_MealsLoading__UmYIn\",\"MealsError\":\"AvailableMeals_MealsError__38x-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"main-image\":\"Header_main-image__2Q3So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2swPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__32qVd\"};","import React from 'react'\n\nexport type CartProviderProps = {\n  children?: React.ReactNode\n}\n\nexport type CartItem = {\n  id: string\n  name: string\n  price: number\n  amount: number\n}\n\nexport type CartState = {\n  items: CartItem[]\n  totalAmount: number\n}\n\nexport const defaultCartState: CartState = {\n  items: [],\n  totalAmount: 0,\n}\n\nexport enum CartActionType {\n  ADD,\n  REMOVE,\n  CLEAR,\n}\n\nexport interface CartAddAction {\n  type: CartActionType.ADD\n  item: CartItem\n}\n\nexport interface CartRemoveAction {\n  type: CartActionType.REMOVE\n  id: string\n}\n\nexport interface CartClearAction {\n  type: CartActionType.CLEAR\n}\n\nexport type CartActions = CartAddAction | CartRemoveAction | CartClearAction\n\nexport type CartContextProviderType = {\n  items: CartItem[]\n  totalAmount: number\n  addItem: (item: CartItem) => void\n  removeItem: (id: string) => void\n  clearCart: () => void\n}\n","const CartIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\n    </svg>\n  )\n}\n\nexport default CartIcon\n","import React from 'react'\n\nimport { CartContextProviderType } from './types'\n\nconst CartContext = React.createContext<CartContextProviderType | null>(null)\n\nexport default CartContext\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport CartIcon from '../Cart/CartIcon'\nimport CartContext from '../../store/cart-context'\nimport { CartContextProviderType, CartItem } from '../../store/types'\n\nimport classes from './HeaderCartButton.module.css'\n\ntype Props = {\n  onClick: (e: React.MouseEvent) => void\n}\n\nconst HeaderCartButton = (props: Props) => {\n  const [buttonIsHighlited, setButtonIsHighlited] = useState<boolean>()\n  const { items } = useContext(CartContext) as CartContextProviderType\n\n  const numberOfCartItems = items.reduce(\n    (currentNumber: number, item: CartItem) => {\n      return currentNumber + item.amount\n    },\n    0\n  )\n\n  const buttonClasses = `${classes.button} ${\n    buttonIsHighlited ? classes.bump : ''\n  }`\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return\n    }\n    setButtonIsHighlited(true)\n\n    const timer = setTimeout(() => {\n      setButtonIsHighlited(false)\n    }, 300)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [items])\n\n  return (\n    <button className={buttonClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button>\n  )\n}\n\nexport default HeaderCartButton\n","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpeg\";","import React from 'react'\n\nimport HeaderCartButton from './HeaderCartButton'\nimport mealsImage from '../../assets/meals.jpeg'\nimport classes from './Header.module.css'\n\ntype Props = {\n  onShowCart: (e: React.MouseEvent) => void\n}\n\nconst Header = ({ onShowCart }: Props) => {\n  return (\n    <React.Fragment>\n      <header className={classes.header}>\n        <h1>ReactMeals</h1>\n        <HeaderCartButton onClick={onShowCart} />\n      </header>\n      <div className={classes['main-image']}>\n        <img src={mealsImage} alt='A table full of food' />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Header\n","import classes from './MealsSummary.module.css'\n\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  )\n}\n\nexport default MealsSummary\n","import React from 'react'\n\nimport classes from './Card.module.css'\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nconst Card = (props: Props) => {\n  return <div className={classes.card}>{props.children}</div>\n}\n\nexport default Card\n","import React from 'react'\n\nimport classes from './Input.module.css'\n\ntype Props = {\n  label: string\n  input: {\n    id: string\n    type: string\n    min: string\n    max: string\n    step: string\n    defaultValue: string\n  }\n}\nconst Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  return (\n    <div className={classes.input}>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input ref={ref} {...props.input} />\n    </div>\n  )\n})\n\nexport default Input\n","import React, { ForwardedRef, useRef, useState } from 'react'\n\nimport Input from '../../UI/Input'\nimport classes from './MealItemForm.module.css'\n\ntype Props = {\n  id: string\n  onAddToCart: (amount: number) => void\n}\n\nconst MealItemForm = (props: Props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true)\n  const amountInputRef = useRef() as React.MutableRefObject<HTMLInputElement>\n\n  const submitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    const enteredAmount = amountInputRef.current!.value\n    const enteredAmountNumber = +enteredAmount\n\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 5\n    ) {\n      setAmountIsValid(false)\n      return\n    }\n\n    setAmountIsValid(true)\n    props.onAddToCart(enteredAmountNumber)\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input\n        ref={amountInputRef}\n        label='Amount'\n        input={{\n          id: 'amount_' + props.id,\n          type: 'number',\n          min: '1',\n          max: '5',\n          step: '1',\n          defaultValue: '1',\n        }}\n      />\n      <button>+ Add</button>\n      {!amountIsValid && <p>Please enter a valid amount {1 - 5}</p>}\n    </form>\n  )\n}\n\nexport default MealItemForm\n","import { useContext } from 'react'\n\nimport MealItemForm from './MealItemForm'\nimport CartContext from '../../../store/cart-context'\nimport { CartContextProviderType } from '../../../store/types'\n\nimport classes from './MealItem.module.css'\n\ntype Props = {\n  id: string\n  name: string\n  description: string\n  price: number\n}\n\nconst MealItem = ({ id, name, description, price }: Props) => {\n  const cartContext = useContext(CartContext) as CartContextProviderType\n  const fixedPrice = `$${price.toFixed(2)}`\n\n  const addToCartHandler = (amount: number) => {\n    cartContext.addItem({\n      id,\n      name,\n      amount,\n      price,\n    })\n  }\n\n  return (\n    <li className={classes.meal}>\n      <div>\n        <h3>{name}</h3>\n        <div className={classes.description}>{description}</div>\n        <div className={classes.price}>{fixedPrice}</div>\n      </div>\n      <div>\n        <MealItemForm onAddToCart={addToCartHandler} id={id} />\n      </div>\n    </li>\n  )\n}\n\nexport default MealItem\n","import { useEffect, useState } from 'react'\n\nimport Card from '../UI/Card'\nimport MealItem from './MealItem/MealItem'\nimport { AvailableMealItem } from './types'\n\nimport classes from './AvailableMeals.module.css'\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState<AvailableMealItem[]>([])\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [httpError, setHttpError] = useState<string | undefined>()\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true)\n      const response = await fetch(\n        'https://react-meals-69a9e-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\n      )\n\n      if (!response.ok) {\n        throw new Error('Something went wrong')\n      }\n\n      const responseData = await response.json()\n\n      const loadedMeals: AvailableMealItem[] = []\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        })\n      }\n\n      setMeals(loadedMeals)\n      setIsLoading(false)\n    }\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false)\n      setHttpError(error.message)\n    })\n  }, [])\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <h1>Loading...</h1>\n      </section>\n    )\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    )\n  }\n\n  const mealsList = meals.map((meal: AvailableMealItem) => {\n    return (\n      <MealItem\n        id={meal.id}\n        key={meal.id}\n        name={meal.name}\n        description={meal.description}\n        price={meal.price}\n      />\n    )\n  })\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  )\n}\n\nexport default AvailableMeals\n","import React from 'react'\n\nimport MealsSummary from './MealsSummary'\nimport AvailableMeals from './AvailableMeals'\n\nconst Meals = () => {\n  return (\n    <React.Fragment>\n      <MealsSummary />\n      <AvailableMeals />\n    </React.Fragment>\n  )\n}\n\nexport default Meals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport classes from './Modal.module.css'\n\ntype BackdropProps = {\n  onClose: (e: React.MouseEvent) => void\n}\n\nconst Backdrop = (props: BackdropProps) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />\n}\n\ntype ModalOveralyProps = {\n  children?: React.ReactNode\n}\n\nconst ModalOverlay = (props: ModalOveralyProps) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  )\n}\n\nconst portalElement = document.getElementById('overlays') as HTMLElement\n\ntype Props = {\n  onClose: (e: React.MouseEvent) => void\n  children?: React.ReactNode\n}\n\nconst Modal = (props: Props) => {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\nimport classes from './CartItem.module.css'\n\ntype Props = {\n  name: string\n  price: number\n  amount: number\n  onRemove: (e: React.MouseEvent) => void\n  onAdd: (e: React.MouseEvent) => void\n}\n\nconst CartItem = ({ name, price, amount, onRemove, onAdd }: Props) => {\n  const fixedPrice = `$${price.toFixed(2)}`\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{fixedPrice}</span>\n          <span className={classes.amount}>x {amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={onRemove}>−</button>\n        <button onClick={onAdd}>+</button>\n      </div>\n    </li>\n  )\n}\n\nexport default CartItem\n","import React, { useRef, useState } from 'react'\n\nimport classes from './Checkout.module.css'\nimport { UserData } from './types'\n\nconst isEmpty = (value: string) => value.trim().length === 0\nconst isFiveChars = (value: string) => value.trim().length === 5\n\ntype Props = {\n  onConfirm: (userData: UserData) => void\n  onCancel: (e: React.MouseEvent) => void\n}\n\nconst Checkout = ({ onConfirm, onCancel }: Props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  })\n  const nameInputRef =\n    useRef<HTMLInputElement>() as React.MutableRefObject<HTMLInputElement>\n  const streetInputRef =\n    useRef<HTMLInputElement>() as React.MutableRefObject<HTMLInputElement>\n  const postalInputRef =\n    useRef<HTMLInputElement>() as React.MutableRefObject<HTMLInputElement>\n  const cityInputRef =\n    useRef<HTMLInputElement>() as React.MutableRefObject<HTMLInputElement>\n\n  const confirmHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    const enteredName = nameInputRef.current.value\n    const enteredStreet = streetInputRef.current.value\n    const enteredPostalCode = postalInputRef.current.value\n    const enteredCity = cityInputRef.current.value\n\n    const enteredNameIsValid = !isEmpty(enteredName)\n    const enteredStreetIsValid = !isEmpty(enteredStreet)\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\n    const enteredCityIsValid = !isEmpty(enteredCity)\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    })\n\n    const formValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalCodeIsValid &&\n      enteredCityIsValid\n\n    if (!formValid) {\n      return\n    }\n\n    // submit cart data\n    onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n    })\n  }\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? '' : classes.invalid\n  }`\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidity.street ? '' : classes.invalid\n  }`\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputsValidity.postalCode ? '' : classes.invalid\n  }`\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? '' : classes.invalid\n  }`\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please entered a valid name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please entered a valid street</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p>Please entered a valid postal code (5 characters long)</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please entered a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Checkout\n","import React, { useState, useContext } from 'react'\n\nimport Modal from '../UI/Modal'\nimport CartContext from '../../store/cart-context'\nimport {\n  CartContextProviderType,\n  CartItem as ItemInCart,\n} from '../../store/types'\nimport CartItem from './CartItem'\nimport Checkout from './Checkout'\nimport { UserData } from './types'\n\nimport classes from './Cart.module.css'\n\ntype Props = {\n  onClose: (event: React.MouseEvent) => void\n}\n\nconst Cart = (props: Props) => {\n  const [isCheckout, setIsCheckout] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [didSubmit, setDidSubmit] = useState(false)\n\n  const cartContext = useContext(CartContext) as CartContextProviderType\n\n  const totalAmount = `$${cartContext.totalAmount.toFixed(2)}`\n  const hasItems = cartContext.items.length > 0\n\n  const cartItemRemoveHandler = (id: string) => {\n    cartContext.removeItem(id)\n  }\n\n  const cartItemAddHandler = (item: ItemInCart) => {\n    cartContext.addItem({ ...item, amount: 1 })\n  }\n\n  const orderHandler = (event: React.MouseEvent) => {\n    setIsCheckout(true)\n  }\n\n  const submitOrderHandler = async (userData: UserData) => {\n    setIsSubmitting(true)\n    await fetch(\n      'https://react-meals-69a9e-default-rtdb.europe-west1.firebasedatabase.app/orders.json',\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartContext.items,\n        }),\n      }\n    )\n\n    setIsSubmitting(false)\n    setDidSubmit(true)\n    cartContext.clearCart()\n  }\n\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartContext.items.map((item) => {\n        return (\n          <CartItem\n            key={item.id}\n            name={item.name}\n            amount={item.amount}\n            price={item.price}\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n            onAdd={cartItemAddHandler.bind(null, { ...item })}\n          />\n        )\n      })}\n    </ul>\n  )\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes['button--alt']} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  )\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckout && (\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n      )}\n      {!isCheckout && modalActions}\n    </React.Fragment>\n  )\n\n  const isSubmittingModalContent = <p>Sending order data...</p>\n\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p>Successfully sent the order!</p>\n      <div className={classes.actions}>\n        <button className={classes.button} onClick={props.onClose}>\n          Close\n        </button>\n      </div>\n    </React.Fragment>\n  )\n\n  return (\n    <Modal onClose={props.onClose}>\n      {!isSubmitting && !didSubmit && cartModalContent}\n      {isSubmitting && isSubmittingModalContent}\n      {!isSubmitting && didSubmit && didSubmitModalContent}\n    </Modal>\n  )\n}\n\nexport default Cart\n","import { useReducer } from 'react'\n\nimport { CartItem, CartActions, CartState, CartActionType } from './types'\nimport CartContext from './cart-context'\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n}\n\nconst cartReducer = (state: CartState, action: CartActions) => {\n  if (action.type === CartActionType.ADD) {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    )\n    const existingCartItem = state.items[existingCartItemIndex]\n    let updatedItems\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      }\n      updatedItems = [...state.items]\n      updatedItems[existingCartItemIndex] = updatedItem\n    } else {\n      updatedItems = state.items.concat(action.item)\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    }\n  }\n\n  if (action.type === CartActionType.REMOVE) {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    )\n    const existingItem = state.items[existingCartItemIndex]\n    const updatedTotalAmount = state.totalAmount - existingItem.price\n\n    let updatedItems\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id)\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 }\n      updatedItems = [...state.items]\n      updatedItems[existingCartItemIndex] = updatedItem\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    }\n  }\n\n  if (action.type === CartActionType.CLEAR) {\n    return defaultCartState\n  }\n\n  return defaultCartState\n}\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nconst CartProvider = (props: Props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  )\n\n  const addItemToCartHandler = (item: CartItem) => {\n    dispatchCartAction({ type: CartActionType.ADD, item: item })\n  }\n\n  const removeItemFromCartHandler = (id: string) => {\n    dispatchCartAction({ type: CartActionType.REMOVE, id: id })\n  }\n\n  const clearCartHandler = () => {\n    dispatchCartAction({ type: CartActionType.CLEAR })\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler,\n  }\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider\n","import React, { useState } from 'react'\n\nimport Header from './components/Layout/Header'\nimport Meals from './components/Meals/Meals'\nimport Cart from './components/Cart/Cart'\nimport CartProvider from './store/CartProvider'\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false)\n\n  const showCartHandler = () => {\n    setCartIsShown(true)\n  }\n\n  const hideCartHandler = () => {\n    setCartIsShown(false)\n  }\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom/client'\n\nimport './index.css'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(<App />)\n"],"sourceRoot":""}